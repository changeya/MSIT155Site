@{
    ViewData["Title"] = "First";
}

<h1>First Ajax Demo</h1>
<input type="button" class="btn btn-primary mb-3" value="Ajax 開始" id="buttonStart" />
<input type="button" class="btn btn-primary mb-3" value="Ajax 停止" id="buttonStop" />
<img src="~/images/Hourglass.gif" style="display:none" id="img1" />
<div class="alert alert-info" id="divInfo"></div>


@section Scripts {
    <script>
        const btnStart = document.querySelector('#buttonStart');
        const btnStop = document.querySelector('#buttonStop');
        const divInfo = document.querySelector('#divInfo');
        const imgLoader = document.querySelector('#img1');
             //ajax
        let abortController;
        //停止Ajax程式的執行
        btnStop.addEventListener('click', () => {
            if (abortController) {
                abortController.abort();
            }
        })


        btnStart.addEventListener('click', async () => {
            try {
                //顯示執行中的圖
                imgLoader.style.display = "inline";
                //disable button
                btnStart.setAttribute('disabled', 'disabled');
                btnStart.value = "執行中...";

                //準備停止程序
                abortController = new AbortController();
                const signal = abortController.signal;
                //5秒鐘沒有回傳結果就停止程式的執行
                setTimeout(() => {
                    abortController.abort();
                }, 5000)

                //signal是埋入停止程序
                const response = await fetch('@Url.Content("~/api/index")', { signal });
                if (!response.ok) {
                    throw new Error(`${response.status}`);
                }
                const data = await response.text();
                divInfo.innerHTML = `<h3>${data}</h3>`;
            } catch (error) {

                let message = error.messsage;
                if (error.name === "AbortError") {
                    message = "伺服器忙碌中，請稍後再來"
                }
                divInfo.innerHTML = `<h3>${message}</h3>`;
            } finally {
                console.log('finally');
                //隱藏執行中圖示
                imgLoader.style.display = "none";
                btnStart.removeAttribute('disabled');
                btnStart.value = "Ajax 開始";
            }


            //async/await錯誤處理
            // btnStart.addEventListener('click', async () => {
            //     try {
            //         const response = await fetch('@Url.Content("~/api/index")');
            //         if (!response.ok) {
            //         throw new Error(`有錯誤 狀態碼:${response.status}`);
            //         }
            //         const data = await response.text();
            //         divInfo.innerHTML = `<h3>${data}</h3>`;
            //     } catch (error) {
            //         divInfo.innerHTML = `<h3>${error}</h3>`;
            //     } finally {
            //         console.log('finally');
            //     }


            // 一般的錯誤處理
            // btnStart.addEventListener('click', () => {
            //     console.log(fetch("/api/index"));
            // fetch('@Url.Content("~/Api/Index")')
            //     .then(response => {
            //         if (!response.ok) {
            //             throw new Error(`有錯誤 狀態碼:${response.status}`);
            //         }
            //         response.headers.forEach((value, name) => {
            //             console.log(`${name}：${value}`)
            //         })
            //         return response.text();
            //     })
            //     .then(e => divInfo.innerHTML = `<h3>${e}</h3>`)
            //     .catch(error => divInfo.innerHTML = error.message);
            })

        
    </script>
}